FT  09 MAR 93 / Technology: Finding a grand unified theory - Technically
Speaking
THE turmoil in the information technology business is plain to see. But the
reasons why so many different kinds of IT company are in trouble is less
obvious. A whole litany of causes can be invoked to explain why companies
are losing money, cutting staff, losing the loyalty of their customers and
so on.
The problem, as Charles Morris and Charles Ferguson point out in the current
issue of the Harvard Business Review, is that the usual explanations are
inadequate.
Certainly the recession is taking its toll throughout the developed world,
but some companies, Intel and Microsoft among them, continue to increase
their sales and profits despite the devastation.
The move to 'open' or industry standard systems has promoted lower prices
for both open and proprietary equipment. But the open systems revolution has
not gone that far yet.
The shift away from mainframes has also affected the traditional computer
industry - companies such as IBM and Unisys. But the majority of companies
which rely on mainframes will continue to use them. There is simply no
cost-effective substitute to mainframes for some applications. Certainly not
client-server networks.
Some companies, such as Digital Equipment, failed to exploit personal
computers early enough. But personal computer makers and distributors have
also been having a rough time as prices plumb the depths, taking profit
margins with them.
Clearly, there is a crying need for a 'grand unified theory' of the great
computer industry disaster to serve both as warning and encouragement.
Morris and Ferguson, authors of a soon-to-be-published book entitled
Computer Wars: How the West Can Win in a Post IBM World, do the next best
thing. They suggest a 'grand unified theory' of success.
'Competitive success flows to the company that manages to establish
proprietary architectural control over a broad, fast-moving competitive
space,' they argue.
In other words, the company that owns, maintains and continues to develop a
design which becomes an industry standard should be a winner.
Their explanation holds good for Intel, Microsoft and Novell. Intel's
microprocessors, Microsoft's operating system and Novell's networking
software are all examples of proprietary designs which have achieved
dominance and propelled their owners to seemingly untouchable success.
Morris and Ferguson are not afraid to take several heretical lines:
proprietary systems, they say, serve customers and technological progress
better than open designs, which become stultified by the need to settle on
compromise solutions. But proprietary designs have to be vigorously
defended, and this propels technological progress forward.
They also argue against the 1980s wisdom that companies should avoid broad,
cost-sensitive markets in favour of high-price niches: 'In fact, the broad
market is the strategic high ground, if it is covered by a proprietary
architecture. Niche product vendors can make profits, but they will remain
minor players.'
Experience of IBM and its all-pervasive System 360 mainframe computer
architecture or Matsushita and its victory over Sony with the VHS video
recorder format suggest that Morris and Ferguson's thesis has much to
recommend it.
They say nothing about the role of luck in the equation, however. Intel and
Microsoft have made the most of their proprietary architectures but they
were handed all the advantages by IBM. When it should have held on to at
least part of its control of its microprocessor or operating system design,
IBM gave it away and unwittingly sowed the seeds of today's PC price wars.
Luck, of course, favours prepared minds and Intel and Microsoft were more
prepared than most. But until creators of 'grand unified theories' find a
way of factoring luck into their equations, they will remain incomplete
explanations of business success.
